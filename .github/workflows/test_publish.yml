name: "Test"

on:
  push:
    branches:
      - "main"
    paths:
      # Always run when workflow configs change
      - ".github/workflows/**"
      # Run when package changes
      - "**"
  release:
    types: [published]

  pull_request:
    branches:
      - "main"
    paths:
      # Always run when workflow configs change
      - ".github/workflows/**"
      # Run when package changes
      - "**"

  workflow_dispatch: {}

jobs:
  test_client:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    strategy:
      matrix:
        python-version:
          - 3.9

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        id: setup_python
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: |
            poetry.lock

      - name: Install dependencies (tests)
        run: |
          pip install pytest pytest-asyncio pytest-mock requests-mock

      - name: Install dependencies 
        working-directory: .
        run: |
          pip install -e .

      - name: Run tests 
        working-directory: .
        run: |
          echo $COHERE_API_KEY
          pytest -sv tests/test_compass_client.py
  publish:
    needs: [test_client]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Bootstrap poetry
        run: |
          curl -sSL https://install.python-poetry.org | python - -y --version 1.5.1
      - name: Install dependencies
        run: poetry install
      - name: Publish to pypi
        run: |
          poetry config repositories.remote https://upload.pypi.org/legacy/
          poetry --no-interaction -v publish --build --repository remote --username "$PYPI_USERNAME" --password "$PYPI_PASSWORD"
        env:
          PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
